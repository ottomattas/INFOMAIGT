Procedural Content Generation
-----------------------------
Assignment 1
Think of three applications for which PCG would be useful. What kind of content could be generated in each application?
* Music generation for performing artists - new musical ideas as content;
* Art generation for visual artists - new visual ideas as content;
* Narrative generation for creative writers - content -> new stories.

Assignment 2
Evaluate the first level of the following L-system:
F++F++F (axiom)
F → F−F++F−F (production rule)

* F−F++F−F++F−F++F−F++F−F++F−F


Assignment 3
Consider the L-system from Assignment 2:
F++F++F (axiom)
F → F−F++F−F (production rule)
Assuming δ = 60◦, what shape does the axiom give? What happens when you apply the production rule?
* The axiom gives an equilateral triangle;
* After applying the production rule, a hexagram is given.

Assignment 4
Name two types of shapes that can be suitably drawn by L-systems (e.g. trees),
* spiderwebs;
* road networks;
* specifically stylised tattoos;
* cracks in glass.

And name two properties of a shape that prevent it from being generated by an L-system.
* any curves;
* shapes where a certain element needs to keep constant length which differs remarkably from the rest of the shape's element lengths (e.g dandelion's petal stems have to stay extensive compared to the rest of the elements of a dandelion).

Assignment 5
Design an L-system that draws the Sierpin ́ski triangle.
* Axiom F++F++F
* Production Rule F -> F[++F]F or F -> F++F++F++FF
* Result F[++F]F++F[++F]F++F[++F]F


Terrain Generation Assignment
-----------------------------
Assignment 1
Name two disadvantages of representing terrain with a heightmap.
* the representation is only a surface model but not what it actually is so we can not interact with terrain as Earth but as a plain of surface. There is no representation for what's under the surface (e.g caves);
* shapes available are limited. Can't represent terrain with multiple protruding levels (e.g overhanging cliffs).

Assignment 2
Assuming that the random number generator always returns 1, complete the heightmap below using the diamond-square method.
* Check attached files.

Assignment 3
The beach agents as described places beaches in random locations.
How could we modify the agents such that the beaches are placed in more realistic locations?
* There are many options. One way would be to assign "operation" tokens to different agents so that each token represents the potential of 1m of beach created, for example. Then we can credit tokens to agents in a way that makes sense for humans. For example, there can't be a beach smaller than 10m in width - this means at least 10 tokens have to be given to any agent. Another example, there can't be a beach created than half of the tokens available - this means there will be at least multiple beaches with no beach taking the majority of tokens (and space). Another example, if there is a (inward) curve in the coastline, there is a higher probability of tokens being available - this means that curving coastline also encourages beach creation as in real life. Investigation into geography and how beaches are formed is necessary before creating such rules, though.

Assignment 4
Why is it important to restrict the operation of certain types of agents to certain phases of the terrain generation process?
* To give a close representation of the real world and how the terrain forms actually. We want generated content to be relevant in each other's context (e.g placing a mountain over a cave does not make sense if there is not access mechanism for that cave).

Assignment 5
If we add a cave agent to our agent-based system, in what phase should it run? Why?
* When we are running agents at the same time, we have to gain something from it. This dictates that we should add the cave agent to the third phase as we are not gaining from creating caves during mountain creation (second phase) but we can gain from running the cave agent and the river agent in the same (third) phase. This way, we could have water running in the cave too.